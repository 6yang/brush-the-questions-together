public class Solution {

    HashMap<Integer,Integer> map = new HashMap<>();
    int[] po ;
    public TreeNode reConstructBinaryTree(int [] pre,int [] in) {
        po = pre;
        for(int i = 0;i < in.length; i ++){
            map.put(in[i],i);
        }
        return build(0,0,in.length-1);
    }
    public TreeNode build(int pre_root,int in_l , int in_r){
        if(in_l > in_r) return null;
        TreeNode root = new TreeNode(po[pre_root]);
        int i = map.get(po[pre_root]);
        root.left = build(pre_root+1,in_l,i-1);
        //在这里计算下一次root节点位置时谨慎！！i-in_l为左子树长度，记得+1
        root.right = build(pre_root+i-in_l+1,i+1,in_r);
        return root;
    }
}